alertness.graph <- ggplot(alertness.long.NoNA, aes(x = time, y = score, fill = condition)) +
geom_flat_violin(aes(fill = condition), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = score, colour = condition), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = score, fill = condition), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), linetype = 3, size = .6) + geom_point(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of alertness across time and condition")
##removal of participant with 4 as they have NAs coded
alertness.long.NoNA <-na.omit(alertness.long)
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
VAS_alertness_exclusions <- read_excel("Desktop/PSY4100/Data /VAS_alertness_exclusions.xlsx")
## mean and sd
alertness.long %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
library(readxl)
VAS_alertness_exclusions <- read_excel("~/Desktop/PSY4100/Data /VAS_alertness_exclusions.xlsx")
View(VAS_alertness_exclusions)
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
VAS_alertness_exclusions <- read_excel("Desktop/PSY4100/Data /VAS_alertness_exclusions.xlsx")
pwd
VAS_alertness_exclusions <- select(VAS_alertness_exclusions, -c(1,...15, ...16))
getwd
## mean and sd
alertness.long %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
VAS_alertness_exclusions <- read_excel("Desktop/PSY4100/Data/VAS_alertness_exclusions.xlsx")
getwd()
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
VAS_alertness_exclusions <- read_excel("/Users/elaine/Desktop/PSY4100/Data/VAS_alertness_exclusions.xlsx")
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
VAS_alertness_exclusions <- read_excel("/Users/elaine/Desktop/PSY4100/Data /VAS_alertness_exclusions.xlsx")
VAS_alertness_exclusions <- select(VAS_alertness_exclusions, -c(1,...15, ...16))
names(VAS_alertness_exclusions) <- c("Participant","MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3")
VAS_alertness_exclusions$Participant <- as.factor(VAS_alertness_exclusions$Participant)
alertness.long <- melt(VAS_alertness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
## mean and sd
alertness.long %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
alertness.mean <- ggplot(alertness.long, aes(condition, score)) +
stat_summary(fun.data = mean_cl_normal) +
theme_pubr()
print(alertness.mean)
##outliers
alertness.long %>% group_by(condition) %>% identify_outliers(score)
## identifying and renaming NAs
alertness.long[alertness.long == 0.00000] <- NA
alertness.long %>% group_by(condition) %>% identify_outliers(score)
alertness.long %>%
group_by(condition) %>%
shapiro_test(score)
ggqqplot(alertness.long, "score", facet.by = "condition")
##One-Way ANOVA Test
alertness.anova <- anova_test(alertness.long, score ~ condition, dv = score, wid = Participant)
get_anova_table(alertness.anova)
pwc.alertness <- alertness.long %>% pairwise_t_test(score ~ condition, paired = TRUE, p.adjust.method = "bonferroni")
pwc.alertness
##removal of participant with 4 as they have NAs coded
alertness.long.NoNA <-na.omit(alertness.long)
##check there are no NAs
complete.cases(alertness.long.NoNA)
summary(alertness.long.NoNA)
##new mean and SD
alertness.long.NoNA %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
alertness.mean1 <- ggplot(alertness.long.NoNA, aes(condition, score)) +
stat_summary(fun.data = mean_cl_normal) +
theme_pubr()
print(alertness.mean1)
##outliers
alertness.long.NoNA %>% group_by(condition) %>% identify_outliers(score)
##normality
alertness.long.NoNA %>%
group_by(condition) %>%
shapiro_test(score)
ggqqplot(alertness.long.NoNA, "score", facet.by = "condition")
## linearity assumption
library(GGally)
linearity.alertness <- alertness.long.NoNA %>%
select(score, condition) %>%
group_by(condition) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
linearity.alertness
linearity.alertness$plots
## homogeneity of variance
leveneTest(score ~ condition, data = alertness.long.NoNA)
##Re-run of The One-Way ANOVA Test
alertness.anova1 <- anova_test(alertness.long.NoNA, score ~ condition, dv = score, wid = Participant)
get_anova_table(alertness.anova1)
##Pair-wise T-test
pwc.alertness1 <- alertness.long.NoNA %>% pairwise_t_test(score ~ condition, paired = FALSE, p.adjust.method = "bonferroni")
pwc.alertness1
## separate condition and time into two different columns
alertness.long.NoNA <- separate(alertness.long.NoNA, "condition", c("condition", "time"))
##change condition and time to factors
alertness.long.NoNA$time <- as.factor(alertness.long.NoNA$time)
alertness.long.NoNA$condition <- as.factor(alertness.long.NoNA$condition)
str(alertness.long.NoNA)
## summary statistics
sum.alertness <- alertness.long.NoNA%>%
group_by(condition, time) %>%
get_summary_stats(score, type = "mean_sd")
sum.alertness
##boxplot
bxp.alertness <- ggboxplot(
alertness.long.NoNA, x = "condition", y = "score",
color = "time", palette = "jco")
bxp.alertness
##outliers
alertness.long.NoNA %>%
group_by(condition, time) %>%
identify_outliers(score)
##normality assumption
alertness.long.NoNA %>%
group_by(condition, time) %>%
shapiro_test(score)
ggqqplot(alertness.long.NoNA, "score", ggtheme = theme_bw()) +
facet_grid(time ~ condition, labeller = "label_both")
##two-way repeated measures ANOVA
alertness.aov <- anova_test(
data = alertness.long.NoNA, dv = score, wid = Participant,
within = c(condition, time))
get_anova_table(alertness.aov)
## Effect of condition at each time point
one.way.alertness <- alertness.long.NoNA %>%
group_by(time) %>%
anova_test(dv = score, wid = Participant, within = condition) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.alertness
# Pairwise comparisons between condition groups
pwc.alertness.2 <- alertness.long.NoNA %>%
group_by(time) %>%
pairwise_t_test(
score ~ condition, paired = FALSE,
p.adjust.method = "bonferroni")
pwc.alertness.2
# Effect of time at each level of condition
one.way2 <- alertness.long.NoNA %>%
group_by(condition) %>%
anova_test(dv = score, wid = Participant, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
# Pairwise comparisons between time points
pwc2 <- alertness.long.NoNA %>%
group_by(condition) %>%
pairwise_t_test(
score ~ time, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc2
alertness.graph <- ggplot(alertness.long.NoNA, aes(x = time, y = score, fill = condition)) +
geom_flat_violin(aes(fill = condition), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = score, colour = condition), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = score, fill = condition), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), linetype = 3, size = .6) + geom_point(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of alertness across time and condition")
alertness.graph <- ggplot(alertness.long.NoNA, aes(x = time, y = score, fill = condition)) +
geom_flat_violin(aes(fill = condition), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = score, colour = condition), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = score, fill = condition), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), linetype = 3, size = .6) + geom_point(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of alertness across time and condition")
library(ggplot2)
alertness.graph <- ggplot(alertness.long.NoNA, aes(x = time, y = score, fill = condition)) +
geom_flat_violin(aes(fill = condition), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = score, colour = condition), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = score, fill = condition), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), linetype = 3, size = .6) + geom_point(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of alertness across time and condition")
install.packages(ggplot)
install.packages("ggplot")
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
VAS_alertness_exclusions <- read_excel("/Users/elaine/Desktop/PSY4100/Data /VAS_alertness_exclusions.xlsx")
VAS_alertness_exclusions <- select(VAS_alertness_exclusions, -c(1,...15, ...16))
names(VAS_alertness_exclusions) <- c("Participant","MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3")
VAS_alertness_exclusions$Participant <- as.factor(VAS_alertness_exclusions$Participant)
alertness.long <- melt(VAS_alertness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R"))
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
alertness.graph <- ggplot(alertness.long.NoNA, aes(x = time, y = score, fill = condition)) +
geom_flat_violin(aes(fill = condition), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = score, colour = condition), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = score, fill = condition), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), linetype = 3, size = .6) + geom_point(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of alertness across time and condition")
alertness.graph
options(digits = 3)
library(haven)
library(data.table)
library(JWileymisc)
library(ggplot2)
library(ggpubr)
library(visreg)
library(survey)
db <- as.data.table(read_sav("B 19032020.sav")) # baseline data
db[, SelfesteemHigh := as.integer(selfesteem >= 15)]
library(lme4)
library(lmerTest)
library(JWileymisc)
data(aces_daily)
d <- as.data.table(aces_daily)
##Intercept only linear mixed model with Positive Affect ratings as the outcome variable
lm.PosAff <- lmer(PosAff ~ 1 + (1|UserID), data = aces_daily, REML = TRUE)
summary(lm.PosAff)
##Intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data =aces_daily)
##Model diagnostics
plot(modelDiagnostics(lm.PosAff), ncol = 2, nrow = 2, ask = FALSE)
library(haven)
library(data.table)
library(JWileymisc)
library(ggplot2)
library(ggpubr)
library(visreg)
## read in data
db <- as.data.table(read_sav("B 19032020.sav")) # baseline data
library(lme4)
library(lmerTest)
library(JWileymisc)
data(aces_daily)
d <- as.data.table(aces_daily)
##Intercept only linear mixed model with Positive Affect ratings as the outcome variable
lm.PosAff <- lmer(PosAff ~ 1 + (1|UserID), data = aces_daily, REML = TRUE)
summary(lm.PosAff)
##Intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data =aces_daily)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
library(JWileymisc)
library(lme4)
library(lmerTest)
CTET_Behaviour <- read.table("/Users/elaine/Desktop/PSY4100/LS_NeuroM/Tables/CTET_behav_res.txt", header = TRUE, sep = ",", stringsAsFactors = FALSE)
CTET_Behaviour$SubID<-as.factor(CTET_Behaviour$SubID)
##Model diagnostics
plot(modelDiagnostics(lm.PosAff), ncol = 2, nrow = 2, ask = FALSE)
options(digits = 4)
## new packages are lme4, lmerTest, and multilevelTools
library(data.table)
library(JWileymisc)
library(lme4)
library(lmerTest)
library(multilevelTools)
library(visreg)
library(ggplot2)
library(ggpubr)
library(haven)
## load data collection exercise data
## merged is a a merged long dataset of baseline and daily
dm <- as.data.table(read_sav("Merged.sav"))
library(lme4)
library(lmerTest)
library(JWileymisc)
library(multilevelTools)
data(aces_daily)
d <- as.data.table(aces_daily)
##Intercept only linear mixed model with Positive Affect ratings as the outcome variable
lm.PosAff <- lmer(PosAff ~ 1 + (1|UserID), data = aces_daily, REML = TRUE)
summary(lm.PosAff)
##Intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data =aces_daily)
##Model diagnostics
plot(modelDiagnostics(lm.PosAff), ncol = 2, nrow = 2, ask = FALSE)
##Confidence intervals
confint(lm.PosAff, method = "profile", oldNames = FALSE)
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(rstatix)
library(JWileymisc)
library(lme4)
library(lmerTest)
library(multilevelTools)
CTET_Behaviour <- read.table("/Users/elaine/Desktop/PSY4100/LS_NeuroM/Tables/CTET_behav_res.txt", header = TRUE, sep = ",", stringsAsFactors = FALSE)
CTET_Behaviour$SubID<-as.factor(CTET_Behaviour$SubID)
##Summary descriptive statistics (mean/SD, or number/frequency)
egltable(c("Treatment", "FA", "Hit_RT", "Miss"), data = CTET_Behaviour, strict=FALSE)
##Effects of treatment on false alarms
lme.FA <- lmer(FA ~ 1 + Treatment + (1|SubID), data = CTET_Behaviour, REML = TRUE)
lme.FA
confint(lme.FA, method = "Wald", oldNames = FALSE)
##Model diagnostics
plot(modelDiagnostics(lme.FA), ncol = 2, nrow = 2, ask = FALSE)
