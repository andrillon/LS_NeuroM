library(reshape2)
library(reshape)
library(rstatix)
library(readxl)
VAS_calmness_exclusions <- read_excel("../Tables/VAS_calmness_exclusions.xlsx")
VAS_calmness_exclusions <- select(VAS_calmness_exclusions, -c(1,...15, ...16))
names(VAS_calmness_exclusions) <- c("Participant","MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3")
VAS_calmness_exclusions$Participant <- as.factor(VAS_calmness_exclusions$Participant)
calmness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
calmness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
calmness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", variable.name = "treatment", value.name = "score")
## separate treatment and time into two different columns
calmness.long <- separate(calmness.long, "treatment", c("treatment", "time"))
almness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", variable.name = "treatment", value.name = "score")
calmness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", variable.name = "treatment", value.name = "rating")
str(VAS_calmness_exclusions)
library(tidyr)
library(reshape2)
calmness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", measure.vars = c("MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3"),variable.name = "treatment", value.name = "rating")
calmness.long <- melt(VAS_calmness_exclusions, id.vars = c("Participant"), measure.vars = c("MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3"),variable.name = "treatment", value.name = "rating")
View(VAS_alertness_exclusions)
alertness.long.NoNA <- separate(alertness.long.NoNA, "condition", c("condition", "time"))
View(VAS_alertness_exclusions)
head(alertness.long.NoNA)
VAS_alertness_exclusions$Participant <- as.factor(VAS_alertness_exclusions$Participant)
alertness.long <- melt(VAS_alertness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
mylist <- lapply(pressure, function(i)read.xlsx(i,colNames = FALSE))#
mydata <- do.call('rbind',mylist)#
View(VAS_alertness_exclusions)
View(alertness.long.NoNA)
View(alertness.long)
calmness.long <- melt(VAS_calmness_exclusions, id.vars = "Participant", variable.name = "treatment", value.name = "rating")
VAS_alertness_exclusions <- read_excel("../Tables/VAS_alertness_exclusions.xlsx")
VAS_alertness_exclusions <- read_excel("../Tables/VAS_alertness_exclusions.xlsx")
VAS_alertness_exclusions <- select(VAS_alertness_exclusions, -c(1,...15, ...16))
names(VAS_alertness_exclusions) <- c("Participant","MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3")
alertness.long <- melt(VAS_alertness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
VAS_alertness_exclusions$Participant <- as.factor(VAS_alertness_exclusions$Participant)
alertness.long <- melt(VAS_alertness_exclusions, id.vars = "Participant", variable.name = "condition", value.name = "score")
alertness.long <- melt(as.data.frame(VAS_alertness_exclusions), id.vars = "Participant", variable.name = "condition", value.name = "score")
calmness.long <- melt(as.data.frame(VAS_calmness_exclusions), id.vars = "Participant", variable.name = "treatment", value.name = "rating")
## separate treatment and time into two different columns
calmness.long <- separate(calmness.long, "treatment", c("treatment", "time"))
View(calmness.long)
View(alertness.long.NoNA)
calmness.long <- melt(as.data.frame(VAS_calmness_exclusions), id.vars = "Participant", variable.name = "treatment", value.name = "rating")
calmness.long <- separate(as.data.frame(calmness.long), "treatment", c("treatment", "time"))
## separate treatment and time into two different columns
calmness.long <- separate(calmness.long, "treatment", c("treatment", "time"), sep = "_")
calmness.long <- melt(as.data.frame(VAS_calmness_exclusions), id.vars = "Participant", variable.name = "treatment", value.name = "rating")
calmness.long
colnames(calmness.long)
View(calmness.long)
names(calmness.long)[names(calmness.long) == "variable"] <- treatment
names(calmness.long)[names(calmness.long) == "variable"] <- "treatment"
names(calmness.long)[names(calmness.long) == "value"] <- "rating"
names(calmness.long)[names(calmness.long) == "variable"] <- "treatment"
names(calmness.long)[names(calmness.long) == "value"] <- "rating"
## separate treatment and time into two different columns
calmness.long <- separate(calmness.long, "treatment", c("treatment", "time"), sep = "_")
##mean and SD
calmness.long %>% group_by(treatment) %>% get_summary_stats(rating, type = "mean_sd")
calmness.mean <- ggplot(calmness.long, aes(treatment, rating)) +
stat_summary(fun.data = mean_cl_normal) +
theme_pubr()
print(calmness.mean)
##outliers
calmness.long %>% group_by(treatment) %>% identify_outliers(rating)
calmness.long %>%
group_by(treatment) %>%
shapiro_test(rating)
ggqqplot(calmness.long, "rating", facet.by = "treatment")
library(GGally)
linearity.calmness <- calmness.long %>%
select(rating, treatment) %>%
group_by(treatment) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
linearity.calmness
linearity.calmness$plots
## homogeneity of variance
leveneTest(rating ~ treatment, data = calmness.long)
## homogeneity of variance
leveneTest(score ~ condition, data = alertness.long.NoNA)
calmness.anova <- anova_test(calmness.long, rating ~ treatment, dv = rating, wid = Participant)
get_anova_table(calmness.anova)
View(calmness.long)
pwc.calmness <- calmness.long %>% pairwise_t_test(rating ~ treatment, paired = FALSE, p.adjust.method = "bonferroni")
pwc.calmness
##change condition and time to factors
calmness.long$time <- as.factor(calmness.long$time)
calmness.long$condition <- as.factor(calmness.long$condition)
str(calmness.long)
calmness.long$time <- as.factor(calmness.long$time)
calmness.long$treatment <- as.factor(calmness.long$treatment)
calmness.long$time <- as.factor(calmness.long$time)
str(calmness.long)
bxp.calmness <- ggboxplot(
calmness.long, x = "treatment", y = "rating",
color = "time", palette = "jco")
bxp.calmness
calmness.aov <- anova_test(
data = calmness.long, dv = rating, wid = Participant,
within = c(treatment, time))
get_anova_table(calmness.aov)
one.way.calmness <- calmness.long %>%
group_by(time) %>%
anova_test(dv = score, wid = Participant, within = treatment) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness <- calmness.long %>%
group_by(time) %>%
anova_test(dv = rating, wid = Participant, within = treatment) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness
pwc.calmness1 <-calmness.long %>%
group_by(time) %>%
pairwise_t_test(
rating ~ treatment, paired = FALSE,
p.adjust.method = "bonferroni")
pwc.calmness1
one.way.calmness1 <- calmness.long %>%
group_by(treatment) %>%
anova_test(dv = rating, wid = Participant, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness1
pwc.calmness2 <- calmness.long %>%
group_by(treatment) %>%
pairwise_t_test(
rating ~ time, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc.calmness2
sum.calmness <- calmness.long %>%
group_by(treatment, time) %>%
get_summary_stats(rating, type = "mean_sd")
sum.calmness
calmness.graph <- ggplot(calmness.long, aes(x = time, y = rating, fill = treatment)) +
geom_flat_violin(aes(fill = treatment), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = rating, colour = treatment), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = rating, fill = treatment), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), linetype = 3, size = .6) + geom_point(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of calmness across time and treatment")
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R"))
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
calmness.graph <- ggplot(calmness.long, aes(x = time, y = rating, fill = treatment)) +
geom_flat_violin(aes(fill = treatment), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = rating, colour = treatment), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = rating, fill = treatment), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), linetype = 3, size = .6) + geom_point(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of calmness across time and treatment")
calmness.graph
calmness.graph <- ggplot(calmness.long, aes(x = time, y = rating, fill = treatment)) +
geom_flat_violin(aes(fill = treatment), position = position_nudge(x = .2, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = rating, colour = treatment), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = rating, fill = treatment), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), linetype = 3, size = .6) + geom_point(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of calmness across time and treatment")
calmness.graph
calmness.graph <- ggplot(calmness.long, aes(x = time, y = rating, fill = treatment)) +
geom_flat_violin(aes(fill = treatment), position = position_nudge(x = .15, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = rating, colour = treatment), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = rating, fill = treatment), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), linetype = 3, size = .6) + geom_point(data = sum.calmness, aes(x = as.numeric(time)+.1, y = mean, group = treatment, colour = treatment), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of calmness across time and treatment")
calmness.graph
##mean and SD
calmness.long %>% group_by(treatment) %>% get_summary_stats(rating, type = "mean_sd")
calmness.mean <- ggplot(calmness.long, aes(treatment, rating)) +
stat_summary(fun.data = mean_cl_normal) +
theme_pubr()
print(calmness.mean)
##outliers
calmness.long %>% group_by(treatment) %>% identify_outliers(rating)
##normality
calmness.long %>%
group_by(treatment) %>%
shapiro_test(rating)
ggqqplot(calmness.long, "rating", facet.by = "treatment")
## linearity assumption
library(GGally)
linearity.calmness <- calmness.long %>%
select(rating, treatment) %>%
group_by(treatment) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
linearity.calmness
linearity.calmness$plots
## homogeneity of variance
leveneTest(rating ~ treatment, data = calmness.long)
##outliers
calmness.long %>% group_by(treatment) %>% identify_outliers(rating)
View(calmness.long)
##normality
calmness.long %>%
group_by(treatment) %>%
shapiro_test(rating)
ggqqplot(calmness.long, "rating", facet.by = "treatment")
##normality
calmness.long %>%
group_by(treatment) %>%
shapiro_test(rating)
ggqqplot(calmness.long, "rating", facet.by = "treatment")
library(GGally)
linearity.calmness <- calmness.long %>%
select(rating, treatment) %>%
group_by(treatment) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
linearity.calmness
linearity.calmness$plots
leveneTest(rating ~ treatment, data = calmness.long)
##One-Way ANOVA Test
calmness.anova <- anova_test(calmness.long, rating ~ treatment, dv = rating, wid = Participant)
get_anova_table(calmness.anova)
##boxplot
bxp.calmness <- ggboxplot(
calmness.long, x = "treatment", y = "rating",
color = "time", palette = "jco")
bxp.calmness
##Pair-wise T-test
pwc.calmness <- calmness.long %>% pairwise_t_test(rating ~ treatment, paired = FALSE, p.adjust.method = "bonferroni")
pwc.calmness
## summary statistics
sum.calmness <- calmness.long %>%
group_by(treatment, time) %>%
get_summary_stats(rating, type = "mean_sd")
sum.calmness
##two-way repeated measures ANOVA
calmness.aov <- anova_test(
data = calmness.long, dv = rating, wid = Participant,
within = c(treatment, time))
get_anova_table(calmness.aov)
## Effect of treatment at each time point
one.way.calmness <- calmness.long %>%
group_by(time) %>%
anova_test(dv = rating, wid = Participant, within = treatment) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness
# Pairwise comparisons between treatment groups
pwc.calmness1 <-calmness.long %>%
group_by(time) %>%
pairwise_t_test(
rating ~ treatment, paired = FALSE,
p.adjust.method = "bonferroni")
pwc.calmness1
# Effect of time at each level of treatment
one.way.calmness1 <- calmness.long %>%
group_by(treatment) %>%
anova_test(dv = rating, wid = Participant, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness1
# Pairwise comparisons between time points
pwc.calmness2 <- calmness.long %>%
group_by(treatment) %>%
pairwise_t_test(
rating ~ time, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc.calmness2
##two-way repeated measures ANOVA
calmness.aov <- anova_test(
data = calmness.long, dv = rating, wid = Participant,
within = c(treatment, time))
get_anova_table(calmness.aov)
one.way.calmness <- calmness.long %>%
group_by(time) %>%
anova_test(dv = rating, wid = Participant, within = treatment) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness
alertness.aov <- anova_test(
data = alertness.long.NoNA, dv = score, wid = Participant,
within = c(condition, time))
alertness.long.NoNA$time <- as.factor(alertness.long.NoNA$time)
alertness.long.NoNA$condition <- as.factor(alertness.long.NoNA$condition)
str(alertness.long.NoNA)
alertness.long.NoNA <- separate(alertness.long.NoNA, "condition", c("condition", "time"))
alertness.aov <- anova_test(
data = alertness.long.NoNA, dv = score, wid = Participant,
within = c(condition, time))
columns
alertness.long.NoNA <-na.omit(alertness.long)
##check there are no NAs
complete.cases(alertness.long.NoNA)
summary(alertness.long.NoNA)
alertness.long.NoNA <- separate(alertness.long.NoNA, "condition", c("condition", "time"))
## separate condition and time into two different columns
alertness.long.NoNA <- separate(alertness.long.NoNA, "condition", c("condition", "time"))
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(reshape)
library(rstatix)
library(readxl)
VAS_alertness_exclusions <- read_excel("../Tables/VAS_alertness_exclusions.xlsx")
VAS_alertness_exclusions <- select(VAS_alertness_exclusions, -c(1,...15, ...16))
names(VAS_alertness_exclusions) <- c("Participant","MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3")
VAS_alertness_exclusions$Participant <- as.factor(VAS_alertness_exclusions$Participant)
alertness.long <- melt(as.data.frame(VAS_alertness_exclusions), id.vars = "Participant", variable.name = "condition", value.name = "score")
## mean and sd
alertness.long %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
View(alertness.long)
names(alertness.long)[names(alertness.long) == "variable"] <- "condition"
names(alertness.long)[names(alertness.long) == "value"] <- "score"
library(ggplot2)
library(ggpubr)
library(car)
library(haven)
library(data.table)
library(visreg)
library(dplyr)
library(tidyr)
library(reshape2)
library(reshape)
library(rstatix)
library(readxl)
VAS_alertness_exclusions <- read_excel("../Tables/VAS_alertness_exclusions.xlsx")
VAS_alertness_exclusions <- select(VAS_alertness_exclusions, -c(1,...15, ...16))
names(VAS_alertness_exclusions) <- c("Participant","MPH_1", "MPH_2", "MPH_3", "ATM_1", "ATM_2", "ATM_3", "CIT_1", "CIT_2", "CIT_3", "PLA_1", "PLA_2", "PLA_3")
VAS_alertness_exclusions$Participant <- as.factor(VAS_alertness_exclusions$Participant)
alertness.long <- melt(as.data.frame(VAS_alertness_exclusions), id.vars = "Participant", variable.name = "condition", value.name = "score")
names(alertness.long)[names(alertness.long) == "variable"] <- "condition"
names(alertness.long)[names(alertness.long) == "value"] <- "score"
## mean and sd
alertness.long %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
alertness.mean <- ggplot(alertness.long, aes(condition, score)) +
stat_summary(fun.data = mean_cl_normal) +
theme_pubr()
print(alertness.mean)
##outliers
alertness.long %>% group_by(condition) %>% identify_outliers(score)
## identifying and renaming NAs
alertness.long[alertness.long == 0.00000] <- NA
alertness.long %>% group_by(condition) %>% identify_outliers(score)
alertness.long %>%
group_by(condition) %>%
shapiro_test(score)
ggqqplot(alertness.long, "score", facet.by = "condition")
##One-Way ANOVA Test
alertness.anova <- anova_test(alertness.long, score ~ condition, dv = score, wid = Participant)
get_anova_table(alertness.anova)
pwc.alertness <- alertness.long %>% pairwise_t_test(score ~ condition, paired = TRUE, p.adjust.method = "bonferroni")
pwc.alertness
##removal of participant with 4 as they have NAs coded
alertness.long.NoNA <-na.omit(alertness.long)
##check there are no NAs
complete.cases(alertness.long.NoNA)
summary(alertness.long.NoNA)
##new mean and SD
alertness.long.NoNA %>% group_by(condition) %>% get_summary_stats(score, type = "mean_sd")
alertness.mean1 <- ggplot(alertness.long.NoNA, aes(condition, score)) +
stat_summary(fun.data = mean_cl_normal) +
theme_pubr()
print(alertness.mean1)
##outliers
alertness.long.NoNA %>% group_by(condition) %>% identify_outliers(score)
##normality
alertness.long.NoNA %>%
group_by(condition) %>%
shapiro_test(score)
ggqqplot(alertness.long.NoNA, "score", facet.by = "condition")
## linearity assumption
library(GGally)
linearity.alertness <- alertness.long.NoNA %>%
select(score, condition) %>%
group_by(condition) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
linearity.alertness
linearity.alertness$plots
## homogeneity of variance
leveneTest(score ~ condition, data = alertness.long.NoNA)
##Re-run of The One-Way ANOVA Test
alertness.anova1 <- anova_test(alertness.long.NoNA, score ~ condition, dv = score, wid = Participant)
get_anova_table(alertness.anova1)
##Pair-wise T-test
pwc.alertness1 <- alertness.long.NoNA %>% pairwise_t_test(score ~ condition, paired = FALSE, p.adjust.method = "bonferroni")
pwc.alertness1
## separate condition and time into two different columns
alertness.long.NoNA <- separate(alertness.long.NoNA, "condition", c("condition", "time"))
##change condition and time to factors
alertness.long.NoNA$time <- as.factor(alertness.long.NoNA$time)
alertness.long.NoNA$condition <- as.factor(alertness.long.NoNA$condition)
str(alertness.long.NoNA)
## summary statistics
sum.alertness <- alertness.long.NoNA%>%
group_by(condition, time) %>%
get_summary_stats(score, type = "mean_sd")
sum.alertness
##boxplot
bxp.alertness <- ggboxplot(
alertness.long.NoNA, x = "condition", y = "score",
color = "time", palette = "jco")
bxp.alertness
##outliers
alertness.long.NoNA %>%
group_by(condition, time) %>%
identify_outliers(score)
##normality assumption
alertness.long.NoNA %>%
group_by(condition, time) %>%
shapiro_test(score)
ggqqplot(alertness.long.NoNA, "score", ggtheme = theme_bw()) +
facet_grid(time ~ condition, labeller = "label_both")
##two-way repeated measures ANOVA
alertness.aov <- anova_test(
data = alertness.long.NoNA, dv = score, wid = Participant,
within = c(condition, time))
get_anova_table(alertness.aov)
## Effect of condition at each time point
one.way.alertness <- alertness.long.NoNA %>%
group_by(time) %>%
anova_test(dv = score, wid = Participant, within = condition) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.alertness
# Pairwise comparisons between condition groups
pwc.alertness.2 <- alertness.long.NoNA %>%
group_by(time) %>%
pairwise_t_test(
score ~ condition, paired = FALSE,
p.adjust.method = "bonferroni")
pwc.alertness.2
# Effect of time at each level of condition
one.way2 <- alertness.long.NoNA %>%
group_by(condition) %>%
anova_test(dv = score, wid = Participant, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
# Pairwise comparisons between time points
pwc2 <- alertness.long.NoNA %>%
group_by(condition) %>%
pairwise_t_test(
score ~ time, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc2
alertness.graph <- ggplot(alertness.long.NoNA, aes(x = time, y = score, fill = condition)) +
geom_flat_violin(aes(fill = condition), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .25, colour = NA) +
geom_point(aes(x = as.numeric(time)-.225, y = score, colour = condition), position = position_jitter(width = .05), size = .25, shape = 20)  + geom_boxplot(aes(x = time, y = score, fill = condition), outlier.shape = NA, alpha = .5, width = .225, colour = "black") +
geom_line(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), linetype = 3, size = .6) + geom_point(data = sum.alertness, aes(x = as.numeric(time)+.1, y = mean, group = condition, colour = condition), shape = 18) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Reported levels of alertness across time and condition")
alertness.graph
##two-way repeated measures ANOVA
alertness.aov <- anova_test(
data = alertness.long.NoNA, dv = score, wid = Participant,
within = c(condition, time))
get_anova_table(alertness.aov)
one.way.alertness
one.way.calmness
# Pairwise comparisons between treatment groups
pwc.calmness1 <-calmness.long %>%
group_by(time) %>%
pairwise_t_test(
rating ~ treatment, paired = FALSE,
p.adjust.method = "bonferroni")
pwc.calmness1
# Effect of time at each level of treatment
one.way.calmness1 <- calmness.long %>%
group_by(treatment) %>%
anova_test(dv = rating, wid = Participant, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way.calmness1
# Pairwise comparisons between time points
pwc2 <- alertness.long.NoNA %>%
group_by(condition) %>%
pairwise_t_test(
score ~ time, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc2
# Effect of time at each level of condition
one.way2 <- alertness.long.NoNA %>%
group_by(condition) %>%
anova_test(dv = score, wid = Participant, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way2
# Pairwise comparisons between treatment groups
pwc.calmness1 <-calmness.long %>%
group_by(time) %>%
pairwise_t_test(
rating ~ treatment, paired = FALSE,
p.adjust.method = "bonferroni")
pwc.calmness1
one.way.calmness
pwc.calmness1
n
one.way.calmness1
# Pairwise comparisons between time points
pwc.calmness2 <- calmness.long %>%
group_by(treatment) %>%
pairwise_t_test(
rating ~ time, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc.calmness2
pwc2
